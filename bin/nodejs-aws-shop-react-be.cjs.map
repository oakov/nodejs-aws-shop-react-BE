{
  "version": 3,
  "sources": ["nodejs-aws-shop-react-be.ts", "../lib/nodejs-aws-shop-react-be-stack.ts"],
  "sourcesContent": ["#!/usr/bin/env node\n// import 'source-map-support/register';\nimport * as cdk from 'aws-cdk-lib';\nimport { NodejsAwsShopReactBeStack } from '../lib/nodejs-aws-shop-react-be-stack';\n\nconst app = new cdk.App();\nnew NodejsAwsShopReactBeStack(app, 'NodejsAwsShopReactBeStack', {\n  /* If you don't specify 'env', this stack will be environment-agnostic.\n   * Account/Region-dependent features and context lookups will not work,\n   * but a single synthesized template can be deployed anywhere. */\n\n  /* Uncomment the next line to specialize this stack for the AWS Account\n   * and Region that are implied by the current CLI configuration. */\n  // env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: process.env.CDK_DEFAULT_REGION },\n\n  /* Uncomment the next line if you know exactly what Account and Region you\n   * want to deploy the stack to. */\n  // env: { account: '123456789012', region: 'us-east-1' },\n\n  /* For more information, see https://docs.aws.amazon.com/cdk/latest/guide/environments.html */\n});", "import * as cdk from 'aws-cdk-lib';\nimport { Function, Runtime, Code } from \"aws-cdk-lib/aws-lambda\";\nimport { Cors, LambdaIntegration, LambdaIntegrationOptions, RestApi } from 'aws-cdk-lib/aws-apigateway';\nimport { Construct } from \"constructs\";\nimport { CfnOutput } from \"aws-cdk-lib/core\";\n\nexport class NodejsAwsShopReactBeStack extends cdk.Stack {\n  constructor(scope: Construct, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    // The code that defines your stack goes here\n\n    // example resource\n    // const queue = new sqs.Queue(this, 'NodejsAwsShopReactBeQueue', {\n    //   visibilityTimeout: cdk.Duration.seconds(300)\n    // });\n\n    const getAllProducts = new Function(this, \"GetAllProducts\", {\n        runtime: Runtime.NODEJS_18_X,\n        code: Code.fromAsset(\"./dist/getProductsList\"),\n        handler: \"getProductsList.handler\"\n    })\n      \n    const getOneProduct = new Function(this, \"GetOneProduct\", {\n        runtime: Runtime.NODEJS_18_X,\n        code: Code.fromAsset(\"./dist/getProductsById\"),\n        handler: \"getProductsById.handler\"\n    })\n      \n    const integrationOptions = <LambdaIntegrationOptions>{\n        allowTestInvoke: false,\n    }\n    const getAllProductsIntegration = new LambdaIntegration(getAllProducts, integrationOptions);\n    const getOneProductIntegration = new LambdaIntegration(getOneProduct, integrationOptions);\n      \n    const api = new RestApi(this, \"ProductApi\", {\n        restApiName: \"Products\",\n        deployOptions: {\n            stageName: \"dev\",\n        },\n        defaultCorsPreflightOptions: {\n            allowOrigins: Cors.ALL_ORIGINS,\n            allowMethods: [\"GET\", \"OPTIONS\"]\n        }\n    });\n              \n    const products = api.root.addResource(\"products\");\n    products.addMethod(\"GET\", getAllProductsIntegration);\n      \n    const oneProduct = products.addResource(\"{id}\");\n    oneProduct.addMethod(\"GET\", getOneProductIntegration);\n      \n            //   new CfnOutput(this, \"ApiUrl\", {\n            //       value: api.url\n            //   })\n  }\n}\n\n// import { Function, Runtime, Code } from \"aws-cdk-lib/aws-lambda\";\n// import { Cors, LambdaIntegration, LambdaIntegrationOptions, RestApi } from 'aws-cdk-lib/aws-apigateway';\n// import { Construct } from \"constructs\";\n// import { CfnOutput } from \"aws-cdk-lib/core\";\n\n// export class ProductsApi extends Construct {\n//     constructor(scope: Construct, id: string) {\n//         super(scope, id);\n\n//         const getAllProducts = new Function(this, \"GetAllProducts\", {\n//             runtime: Runtime.NODEJS_18_X,\n//             code: Code.fromAsset(\"./dist/lambdas/getProducts\"),\n//             handler: \"getProducts.handler\"\n//         })\n\n//         const getOneProduct = new Function(this, \"GetOneProduct\", {\n//             runtime: Runtime.NODEJS_18_X,\n//             code: Code.fromAsset(\"./dist/lambdas/getOneProduct\"),\n//             handler: \"getOneProduct.handler\"\n//         })\n\n//         const integrationOptions = <LambdaIntegrationOptions>{\n//             allowTestInvoke: false,\n//         }\n//         const getAllProductsIntegration = new LambdaIntegration(getAllProducts, integrationOptions);\n//         const getOneProductIntegration = new LambdaIntegration(getOneProduct, integrationOptions);\n\n//         const api = new RestApi(this, \"ProductApi\", {\n//             restApiName: \"Products\",\n//             deployOptions: {\n//                 stageName: \"dev\",\n//             },\n//             defaultCorsPreflightOptions: {\n//                 allowOrigins: Cors.ALL_ORIGINS,\n//                 allowMethods: [\"GET\", \"OPTIONS\"]\n//             }\n//         });\n        \n//         const products = api.root.addResource(\"products\");\n//         products.addMethod(\"GET\", getAllProductsIntegration);\n\n//         const oneProduct = products.addResource(\"{id}\");\n//         oneProduct.addMethod(\"GET\", getOneProductIntegration);\n\n//         new CfnOutput(this, \"ApiUrl\", {\n//             value: api.url\n//         })\n//     }\n// }"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAAA,OAAqB;;;ACFrB,UAAqB;AACrB,wBAAwC;AACxC,4BAA2E;AAIpE,IAAM,4BAAN,cAA4C,UAAM;AAAA,EACvD,YAAY,OAAkB,IAAY,OAAwB;AAChE,UAAM,OAAO,IAAI,KAAK;AAStB,UAAM,iBAAiB,IAAI,2BAAS,MAAM,kBAAkB;AAAA,MACxD,SAAS,0BAAQ;AAAA,MACjB,MAAM,uBAAK,UAAU,wBAAwB;AAAA,MAC7C,SAAS;AAAA,IACb,CAAC;AAED,UAAM,gBAAgB,IAAI,2BAAS,MAAM,iBAAiB;AAAA,MACtD,SAAS,0BAAQ;AAAA,MACjB,MAAM,uBAAK,UAAU,wBAAwB;AAAA,MAC7C,SAAS;AAAA,IACb,CAAC;AAED,UAAM,qBAA+C;AAAA,MACjD,iBAAiB;AAAA,IACrB;AACA,UAAM,4BAA4B,IAAI,wCAAkB,gBAAgB,kBAAkB;AAC1F,UAAM,2BAA2B,IAAI,wCAAkB,eAAe,kBAAkB;AAExF,UAAM,MAAM,IAAI,8BAAQ,MAAM,cAAc;AAAA,MACxC,aAAa;AAAA,MACb,eAAe;AAAA,QACX,WAAW;AAAA,MACf;AAAA,MACA,6BAA6B;AAAA,QACzB,cAAc,2BAAK;AAAA,QACnB,cAAc,CAAC,OAAO,SAAS;AAAA,MACnC;AAAA,IACJ,CAAC;AAED,UAAM,WAAW,IAAI,KAAK,YAAY,UAAU;AAChD,aAAS,UAAU,OAAO,yBAAyB;AAEnD,UAAM,aAAa,SAAS,YAAY,MAAM;AAC9C,eAAW,UAAU,OAAO,wBAAwB;AAAA,EAKtD;AACF;;;ADnDA,IAAM,MAAM,IAAQ,SAAI;AACxB,IAAI,0BAA0B,KAAK,6BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAchE,CAAC;",
  "names": ["cdk"]
}
